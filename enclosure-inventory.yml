  - name: Set endpoints
    set_fact:
        appliance_bay_endpoint:           "{{ enc_item.applianceBays }}"
        device_bay_endpoint:              "{{ enc_item.deviceBays }}"
        fan_bay_endpoint:                 "{{ enc_item.fanBays }}"
        interconnect_bay_endpoint:        "{{ enc_item.interconnectBays }}"
        manager_bay_endpoint:             "{{ enc_item.managerBays }}"
        power_supply_bay_endpoint:        "{{ enc_item.powerSupplyBays }}"

        applianceBayCount:                "{{ enc_item.applianceBayCount | string }}"
        deviceBayCount:                   "{{ enc_item.deviceBayCount | string }}"
        deviceBayWatts:                   "{{ enc_item.deviceBayWatts | string }}"

        enclosureModel:                   "{{ enc_item.enclosureModel }}"
        enclosureType:                    "{{ enc_item.enclosureType }}"
        enclosureCategory:                "{{ enc_item.category }}"

        fanBayCount:                      "{{ enc_item.fanBayCount | string }}"
        fansAndManagementDevicesWatts:    "{{ enc_item.fansAndManagementDevicesWatts }}"

        #forceInstallFirmware:            "{{ enc_item.forceInstallFirmware }}"
        #isFwManaged:                     "{{ enc_item.isFwManaged }}"
        frameLinkModuleDomain:            "{{ enc_item.frameLinkModuleDomain }}"
        fwBaselineName:                   "{{ enc_item.fwBaselineName }}"

        interconnectBayCount:             "{{ enc_item.interconnectBayCount | string }}"
        interconnectBayWatts:             "{{ enc_item.interconnectBayWatts | string }}"

        licensingIntent:                  "{{ enc_item.licensingIntent }}"
        managerBayCount:                  "{{ enc_item.managerBayCount | string }}"

        minimumPowerSupplies:             "{{ enc_item.minimumPowerSupplies | string }}"
        minimumPowerSuppliesForRedundantPowerFeed:    "{{ enc_item.minimumPowerSuppliesForRedundantPowerFeed | string }}"

        name:                             "{{ enc_item.name }}"
        enclosureName:                    "{{ enc_item.name }}" # Used in sub-inventory
        partNumber:                       "{{ enc_item.partNumber }}"
        serialNumber:                     "{{ enc_item.serialNumber }}"
        state:                            "{{ enc_item.state }}"
        status:                           "{{ enc_item.status }}"
        reconfigurationState:             "{{ enc_item.reconfigurationState }}"
        refreshState:                     "{{ enc_item.refreshState }}"

        powerAllocatedWatts:              "{{ enc_item.powerAllocatedWatts | string }}"
        powerAvailableWatts:              "{{ enc_item.powerAvailableWatts | string }}"
        powerCapacityBoostWatts:          "{{ enc_item.powerCapacityBoostWatts | string }}"
        powerCapacityWatts:               "{{ enc_item.powerCapacityWatts | string }}"
        powerpowerMode:                   "{{ enc_item.powerMode }}"
        powerSupplyBayCount:              "{{ enc_item.powerSupplyBayCount | string }}"

        rs_destination:                   "{{ enc_item.remoteSupportSettings.destination }}"
        rs_currentState:                  "{{ enc_item.remoteSupportSettings.remoteSupportCurrentState }}"

        supportDataCollectionState:       "{{ enc_item.supportDataCollectionState }}"
        supportDataCollectionType:        "{{ enc_item.supportDataCollectionType }}"

        enclosureGroupUri:                "{{ enc_item.enclosureGroupUri }}"
        enclosureGroupName:               "{{ enclosure_group_endpoint | selectattr('uri', 'equalto', enc_item.enclosureGroupUri ) | map(attribute='name') | first  }}"
        logicalEnclosureUri:              "{{ enc_item.logicalEnclosureUri }}"
        logicalEnclosureName:             "{{ logical_enclosure_endpoint | selectattr('uri', 'equalto', enc_item.logicalEnclosureUri ) | map(attribute='name') | first  }}"

        fwBaselineUri:                    "{{ enc_item.fwBaselineUri }}"
        
        remoteSupportUri:                 "{{ enc_item.remoteSupportUri }}"
        scopesUri:                        "{{ enc_item.scopesUri }}"
        supportDataCollectionsUri:        "{{ enc_item.supportDataCollectionsUri }}"
        uri:                              "{{ enc_item.uri }}"


  - name: Add to enclosure csv file
    lineinfile:
        path: "{{ enclosure_csv }}"
        line: >-
          {{  name + ',' + enclosureModel + ',' + enclosureType + ',' + 
              licensingIntent + ',' +  frameLinkModuleDomain + ',' + fwBaselineName + ',' +
              applianceBayCount + ',' + managerBayCount + ',' +
              deviceBayCount + ',' + deviceBayWatts  + ',' +
              fanBayCount + ',' +  fansAndManagementDevicesWatts  + ',' +
              interconnectBayCount + ',' + interconnectBayWatts  + ',' +
              minimumPowerSupplies + ',' + minimumPowerSuppliesForRedundantPowerFeed + ',' +
              partNumber + ',' + serialNumber + ',' + state + ',' + status + ',' +
              reconfigurationState + ',' + refreshState + ',' +
              powerAllocatedWatts + ',' + powerAvailableWatts + ',' + powerCapacityBoostWatts + ',' +
              powerCapacityWatts + ',' + powerpowerMode + ',' + powerSupplyBayCount + ',' +
              rs_destination + ',' + rs_currentState + ',' +
              supportDataCollectionState + ',' + supportDataCollectionType + ',' +
              enclosureGroupUri + ',' + fwBaselineUri + ',' + logicalEnclosureUri + ',' +
              enclosureGroupName  + ',' + logicalEnclosureName  + ',' +
              remoteSupportUri + ',' + scopesUri + ',' + supportDataCollectionsUri + ',' + uri
              }}

        # name,model_id,u_enclosure_type,
        # u_licensing_intent,u_frame_link_module_domain,u_firmware_baseline_name,
        # u_appliance_bay_count,u_manager_bay_count,
        # u_device_bay_count,u_device_bay_watts,
        # u_fan_bay_count,u_fans_and_management_devices_watts,
        # u_interconnect_bay_count,u_interconnect_bay_watts,
        # u_minimum_power_supplies,u_minimum_power_supplies_for_redundancy,
        # u_part_number,serial_number,state,status,
        # reconfigurationState,refreshState,
        # u_power_allocated_watts,u_power_available_watts,powerCapacityBoostWatts,
        # u_power_capacity_watts,u_power_mode,u_power_supply_bay_count,
        # remoteSupport_destination,remoteSupport_currentState,
        # supportDataCollectionState,supportDataCollectionType,
        # enclosureGroupUri,fwBaselineUri,logicalEnclosureUri,
        # u_enclosure_group,u_logical_enclosure,
        # remoteSupportUri,scopesUri,supportDataCollectionsUri,uri

        # Not considered:forceInstallFirmware( bool) isFwManaged(bool)

  - name: Add to model csv file
    vars:
      _cat:        "{{ model_categories[enclosureCategory] }}"
    lineinfile:
        path: "{{ model_csv }}"
        line: >-
          {{ enclosureModel + ',' + _cat + ',' + company + ',' + enclosureType }}
        # name,model_categories,manufacturer,short_description
    when: enclosureModel | length > 0    # Do not add model if NULL
        
  # --- Get bays information
  - name: Get appliance bay inventory
    include_tasks: enclosure-appliance-bay-inventory.yml
    loop: '{{ appliance_bay_endpoint }}'
    loop_control:
        loop_var: bay_item

  - name: Get device_bay inventory
    include_tasks: enclosure-device-bay-inventory.yml
    loop: '{{ device_bay_endpoint }}'
    loop_control:
        loop_var: bay_item

  - name: Get interconnect bay inventory
    include_tasks: enclosure-interconnect-bay-inventory.yml
    loop: '{{ interconnect_bay_endpoint }}'
    loop_control:
        loop_var: bay_item

  - name: Get fan bay inventory
    include_tasks: enclosure-fan-bay-inventory.yml
    loop: '{{ fan_bay_endpoint }}'
    loop_control:
        loop_var: bay_item

  - name: Get manager bay inventory
    include_tasks: enclosure-manager-bay-inventory.yml
    loop: '{{ manager_bay_endpoint }}'
    loop_control:
        loop_var: bay_item

  - name: Get power supply bay inventory
    include_tasks: enclosure-power-supply-bay-inventory.yml
    loop: '{{ power_supply_bay_endpoint }}'
    loop_control:
        loop_var: bay_item